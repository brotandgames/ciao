# Default values for ciao.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Ciao is not designed to be horizontally scalable
# due to architecture decisions (no external dependencies):
# * in-memory (background) job scheduler: rufus-scheduler
# * internal database: sqlite
# replicaCount must be 1
replicaCount: 1

image:
  repository: brotandgames/ciao
  tag: latest
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# All ciao configuration options are adjustable via ENV vars.
# Ref: https://github.com/brotandgames/ciao#configuration
env: {}
  # SECRET_KEY_BASE: "sensitive_secret_key_base"
  # SMTP_ADDRESS: smtp.yourhost.com
  # SMTP_EMAIL_FROM: "ciao@yourhost.com"
  # SMTP_EMAIL_TO: "you@yourhost.com"
  # SMTP_PORT: 587
  # SMTP_AUTHENTICATION: plain
  # SMTP_DOMAIN: smtp.yourhost.com
  # SMTP_ENABLE_STARTTLS_AUTO: auto
  # SMTP_USERNAME: ciao
  # SMTP_PASSWORD: "sensitive_password"
  #
  # Check Reference for a full list of configuration variables.
  # Mind the ': ' instead of '=' when setting a variable and
  # don't forget to remove '{}'.

# Enable persistence using Persistent Volume Claims
# Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
persistence:
  enabled: false

  # A manually managed Persistent Volume and Claim
  # Requires persistence.enabled: true
  # If defined, PVC must be created manually before volume will be bound
  # existingClaim:

  # ciao data Persistent Volume Storage Class
  # If defined, storageClassName: <storageClass>
  # If set to "-", storageClassName: "", which disables dynamic provisioning
  # If undefined (the default) or set to null, no storageClassName spec is
  #   set, choosing the default provisioner.  (gp2 on AWS, standard on
  #   GKE, AWS & OpenStack)
  #
  # Storage class of PV to bind. By default it looks for standard storage class.
  # If the PV uses a different storage class, specify that here.
  # storageClass: standard
  # VolumeName: ""
  accessMode: ReadWriteOnce
  size: 1Gi

  # If subPath is set mount a sub folder of a volume instead of the root of the volume.
  # This is especially handy for volume plugins that don't natively support sub mounting (like glusterfs).
  subPath: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ciao.local
      paths: []

  tls: []
  #  - secretName: ciao-tls
  #    hosts:
  #      - ciao.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
